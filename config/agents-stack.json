{
  "orchestrator": {
    "name": "Nublado Master Orchestrator",
    "version": "3.0.0",
    "role": "Central coordination and task distribution",
    "capabilities": [
      "task_distribution",
      "branch_management",
      "conflict_resolution",
      "performance_monitoring",
      "agent_lifecycle_management"
    ]
  },
  "agents": [
    {
      "id": "agent_001",
      "name": "UI/UX Designer Agent",
      "branch": "feature/ui-design",
      "role": "User interface and experience design",
      "specialization": {
        "primary": ["design_systems", "responsive_design", "accessibility"],
        "tools": ["figma_api", "color_theory", "typography", "material_design"],
        "outputs": ["design_tokens", "component_specs", "style_guides"]
      },
      "permissions": {
        "read": ["*"],
        "write": ["src/styles/**", "src/design-system/**", "docs/design/**"],
        "execute": ["design:validate", "design:export"]
      },
      "protocols": {
        "communication": "event-driven",
        "priority": 9,
        "parallel_safe": true
      }
    },
    {
      "id": "agent_002",
      "name": "Frontend Developer Agent",
      "branch": "feature/frontend",
      "role": "React/Vue/HTML component development",
      "specialization": {
        "primary": ["react", "vue", "component_architecture"],
        "tools": ["jsx", "tsx", "hooks", "state_management"],
        "outputs": ["components", "pages", "routing"]
      },
      "permissions": {
        "read": ["*"],
        "write": ["src/components/**", "src/pages/**", "src/hooks/**"],
        "execute": ["build:frontend", "test:components"]
      },
      "protocols": {
        "communication": "event-driven",
        "priority": 8,
        "parallel_safe": true
      }
    },
    {
      "id": "agent_003",
      "name": "CSS Styling Agent",
      "branch": "feature/styles",
      "role": "Advanced CSS and responsive styling",
      "specialization": {
        "primary": ["css3", "sass", "tailwind", "css-in-js"],
        "tools": ["flexbox", "grid", "animations", "transitions"],
        "outputs": ["stylesheets", "utility_classes", "theme_config"]
      },
      "permissions": {
        "read": ["*"],
        "write": ["src/styles/**", "tailwind.config.js", "**/*.css", "**/*.scss"],
        "execute": ["build:styles", "optimize:css"]
      },
      "protocols": {
        "communication": "event-driven",
        "priority": 7,
        "parallel_safe": true
      }
    },
    {
      "id": "agent_004",
      "name": "Mobile Optimization Agent",
      "branch": "feature/mobile",
      "role": "Mobile-first optimization and PWA features",
      "specialization": {
        "primary": ["responsive_design", "pwa", "mobile_performance"],
        "tools": ["viewport_optimization", "touch_events", "service_workers"],
        "outputs": ["manifest.json", "mobile_layouts", "offline_strategy"]
      },
      "permissions": {
        "read": ["*"],
        "write": ["src/mobile/**", "public/manifest.json", "src/service-worker.js"],
        "execute": ["test:mobile", "audit:lighthouse"]
      },
      "protocols": {
        "communication": "event-driven",
        "priority": 8,
        "parallel_safe": true
      }
    },
    {
      "id": "agent_005",
      "name": "Performance Optimizer Agent",
      "branch": "feature/performance",
      "role": "Code optimization and performance tuning",
      "specialization": {
        "primary": ["code_splitting", "lazy_loading", "caching_strategies"],
        "tools": ["webpack", "vite", "bundle_analysis", "compression"],
        "outputs": ["optimized_bundles", "performance_reports", "cache_config"]
      },
      "permissions": {
        "read": ["*"],
        "write": ["webpack.config.js", "vite.config.js", ".cache/**"],
        "execute": ["build:optimize", "analyze:bundle", "test:performance"]
      },
      "protocols": {
        "communication": "event-driven",
        "priority": 6,
        "parallel_safe": true
      }
    },
    {
      "id": "agent_006",
      "name": "API Integration Agent",
      "branch": "feature/api",
      "role": "Backend integration and data management",
      "specialization": {
        "primary": ["rest_api", "graphql", "websockets", "state_management"],
        "tools": ["axios", "fetch", "apollo", "redux", "zustand"],
        "outputs": ["api_clients", "data_models", "store_config"]
      },
      "permissions": {
        "read": ["*"],
        "write": ["src/api/**", "src/services/**", "src/store/**"],
        "execute": ["test:api", "mock:server"]
      },
      "protocols": {
        "communication": "event-driven",
        "priority": 7,
        "parallel_safe": true
      }
    },
    {
      "id": "agent_007",
      "name": "Testing & QA Agent",
      "branch": "feature/testing",
      "role": "Automated testing and quality assurance",
      "specialization": {
        "primary": ["unit_testing", "e2e_testing", "visual_regression"],
        "tools": ["jest", "cypress", "playwright", "testing-library"],
        "outputs": ["test_suites", "coverage_reports", "qa_metrics"]
      },
      "permissions": {
        "read": ["*"],
        "write": ["**/*.test.js", "**/*.spec.js", "cypress/**", "tests/**"],
        "execute": ["test:unit", "test:e2e", "test:visual"]
      },
      "protocols": {
        "communication": "event-driven",
        "priority": 5,
        "parallel_safe": true
      }
    },
    {
      "id": "agent_008",
      "name": "SEO & Accessibility Agent",
      "branch": "feature/seo-a11y",
      "role": "SEO optimization and accessibility compliance",
      "specialization": {
        "primary": ["seo", "accessibility", "semantic_html", "aria"],
        "tools": ["meta_tags", "structured_data", "sitemap", "robots.txt"],
        "outputs": ["seo_config", "accessibility_reports", "metadata"]
      },
      "permissions": {
        "read": ["*"],
        "write": ["public/robots.txt", "public/sitemap.xml", "src/seo/**"],
        "execute": ["audit:seo", "audit:a11y"]
      },
      "protocols": {
        "communication": "event-driven",
        "priority": 6,
        "parallel_safe": true
      }
    },
    {
      "id": "agent_009",
      "name": "Documentation Agent",
      "branch": "feature/docs",
      "role": "Code documentation and user guides",
      "specialization": {
        "primary": ["jsdoc", "markdown", "api_docs", "user_guides"],
        "tools": ["storybook", "docusaurus", "readme_generation"],
        "outputs": ["documentation", "api_reference", "component_stories"]
      },
      "permissions": {
        "read": ["*"],
        "write": ["docs/**", "*.md", ".storybook/**", "**/*.stories.js"],
        "execute": ["build:docs", "build:storybook"]
      },
      "protocols": {
        "communication": "event-driven",
        "priority": 4,
        "parallel_safe": true
      }
    },
    {
      "id": "agent_010",
      "name": "DevOps & Deployment Agent",
      "branch": "feature/devops",
      "role": "CI/CD pipeline and deployment management",
      "specialization": {
        "primary": ["github_actions", "deployment", "monitoring"],
        "tools": ["docker", "github_pages", "vercel", "netlify"],
        "outputs": ["ci_pipelines", "deployment_configs", "monitoring_setup"]
      },
      "permissions": {
        "read": ["*"],
        "write": [".github/**", "Dockerfile", "docker-compose.yml", "netlify.toml"],
        "execute": ["deploy:staging", "deploy:production", "rollback"]
      },
      "protocols": {
        "communication": "event-driven",
        "priority": 5,
        "parallel_safe": true
      }
    },
    {
      "id": "agent_011",
      "name": "GitHub Spark Specialist Agent",
      "branch": "feature/spark-integration",
      "role": "GitHub Spark AI tool expert and integration specialist",
      "specialization": {
        "primary": ["github_spark", "natural_language_development", "micro_apps", "pwa_deployment"],
        "tools": ["spark_sdk", "claude_sonnet", "github_models", "prompt_engineering"],
        "outputs": ["spark_apps", "ai_integrations", "deployment_configs", "migration_plans"]
      },
      "permissions": {
        "read": ["*"],
        "write": ["src/sparks/**", "sparks/**", ".spark/**"],
        "execute": ["spark:create", "spark:deploy", "spark:test", "gh:auth"]
      },
      "protocols": {
        "communication": "event-driven",
        "priority": 8,
        "parallel_safe": true
      },
      "capabilities": {
        "spark_features": [
          "natural_language_app_creation",
          "ai_feature_integration",
          "instant_pwa_deployment",
          "github_auth_integration",
          "realtime_preview",
          "cross_device_sync"
        ],
        "best_practices": [
          "prompt_optimization",
          "use_case_analysis",
          "migration_assessment",
          "ai_model_selection",
          "performance_optimization"
        ],
        "limitations_awareness": [
          "requires_copilot_pro_plus",
          "micro_app_scope",
          "claude_sonnet_dependency",
          "web_platform_only"
        ]
      }
    }
  ],
  "protocols": {
    "branch_strategy": {
      "main_branch": "main",
      "development_branch": "develop",
      "feature_prefix": "feature/",
      "auto_merge": false,
      "require_reviews": true,
      "conflict_resolution": "orchestrator-mediated"
    },
    "communication": {
      "type": "message-queue",
      "channels": {
        "task_assignment": "tasks.assign",
        "status_update": "status.update",
        "completion_notice": "task.complete",
        "help_request": "help.request",
        "conflict_alert": "conflict.detected"
      }
    },
    "parallelism": {
      "max_concurrent_agents": 10,
      "task_queue": "priority-based",
      "resource_allocation": "dynamic",
      "deadlock_prevention": true,
      "sync_checkpoints": ["pre-merge", "post-test", "pre-deploy"]
    },
    "quality_gates": {
      "code_review": true,
      "automated_testing": true,
      "performance_benchmarks": true,
      "accessibility_standards": "WCAG 2.1 AA",
      "seo_requirements": true
    }
  },
  "training": {
    "continuous_learning": true,
    "feedback_loops": true,
    "performance_metrics": [
      "task_completion_time",
      "code_quality_score",
      "bug_rate",
      "user_satisfaction"
    ],
    "specialization_paths": {
      "frontend": ["react_advanced", "vue_mastery", "performance_expert"],
      "design": ["ux_research", "design_systems", "motion_design"],
      "backend": ["api_architecture", "database_optimization", "security"],
      "testing": ["tdd", "bdd", "performance_testing"]
    }
  }
}